# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|nl|nl_NL|nl_BE|es|fr|de|pl|it|pt_BR
    app.notifications.email_sender: anonymous@example.com
    doctrine.orm.entity_manager.class: Bolt\Doctrine\TranslatableEntityManager
    stof_doctrine_extensions.listener.translatable.class: Bolt\EventListener\PreTranslatableListener
    bolt.table_prefix: bolt_

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:               # defines the scalar arguments once and apply them to any service defined/created in this file
            $locales: '%app_locales%'
            $emailSender: '%app.notifications.email_sender%'
            $projectDir: '%kernel.project_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Bolt\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Bolt\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Bolt\EventListener\ContentFillListener:
        tags:
            - { name: doctrine.event_listener, event: postLoad }

    Bolt\Menu\MenuBuilder:
        arguments: ["@knp_menu.factory"]
        tags:
            - { name: knp_menu.menu_builder, method: createSidebarMenu, alias: sidebar } # The alias is what is used to retrieve the menu

    Twig\Extension\StringLoaderExtension: ~
    Doctrine\ORM\Query\Expr: ~

    Bolt\Doctrine\TablePrefix:
        arguments: [ "%bolt.table_prefix%" ]
        tags:
            - { name: doctrine.event_listener, event: loadClassMetadata, lazy: true }
